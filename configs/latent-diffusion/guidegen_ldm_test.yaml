model:
  base_learning_rate: 2.e-5
  target: inference.models.InferLatentDiffusion
  params:
    linear_start: 0.0015
    linear_end: 0.0195
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    loss_type: l1
    first_stage_key: image
    cond_stage_key: 
      crossattn: prompt
      concat: cond
    conditioning_key: hybrid
    # only text cond
    # cond_stage_key: prompt_context
    # conditioning_key: crossattn
    image_size: [32, 32, 32]  # after first-stage encoding
    # channels: 4  # after first-stage encoding
    channels: 8  # after first-stage encoding
    monitor: val/loss_simple
    cond_stage_trainable: false
    use_ema: false
    use_window_norm: false
    ckpt_path: /ailab/user/dailinrui/data/ldm/guidegen_ldm_128_128_128/checkpoints/epoch=000234.ckpt
    # ckpt_path: /ailab/user/dailinrui/data/ldm/guidegen_ldm_128_128_128_wo_cam/checkpoints/last.ckpt

    save_dataset: true 
    save_dataset_path: /ailab/user/dailinrui/data/vis/vis/
    # save_dataset_path: /ailab/user/dailinrui/data/ldm/guidegen_ldm_128_128_128_wo_cam/dataset_noddim
    # save_dataset_path: /ailab/user/dailinrui/data/ldm/guidegen_ldm_128_128_128/dataset_noddim
    include_keys: [samples, inputs, cond, prompt]
    suffix_keys: 
      samples: .nii.gz
      cond: .nii.gz
      # conditioning_c_crossattn: .dummy
      inputs: .nii.gz

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 64  # not used
        in_channels: 12
        out_channels: 8
        model_channels: 128
        attention_resolutions: [2, 4]
        num_res_blocks: 2
        channel_mult: [1, 2, 4]
        num_head_channels: 64
        use_checkpoint: true  # always use ckpt
        use_spatial_transformer: true
        context_dim: 768

    first_stage_config:
      target: ldm.models.autoencoder.VQModelInterface
      params:
        monitor: "val/rec_loss"
        image_key: image
        # embed_dim: 4
        embed_dim: 8
        n_embed: 8192
        dims: 3
        # no cam
        # ckpt_path: /ailab/user/dailinrui/data/ldm/ensemble_norm1000_vq_128_128_128/checkpoints/last.ckpt
        ckpt_path: /ailab/user/dailinrui/data/ldm/ensemblev2_vq_norm2400_128_128_128/checkpoints/last.ckpt
        lossconfig:
          target: torch.nn.Identity

        ddconfig:
          double_z: false
          z_channels: 8
          resolution: [128, 128, 128]
          in_channels: 1
          out_ch: 1
          ch: 128
          ch_mult: [ 1, 1, 1 ]  # num_down = len(ch_mult)-1
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
          dims: 3
          attn_type: none

    cond_stage_config: 
      # guidegen
      target: ldm.modules.encoders.modules.HybridConditionEncoder
      params:
        concat_module:
          target: ldm.modules.diffusionmodules.model.Encoder
          params:
            double_z: false
            z_channels: 4
            resolution: [128, 128, 128]
            in_channels: 2
            ch: 64
            out_ch: 1
            ch_mult: [1,1,1]  # num_down = len(ch_mult)-1
            num_res_blocks: 1
            dropout: 0.0
            attn_resolutions: []  # on z axis, starting with 12->24->48 for len(ch_mult)==4 and resolution==96
            attn_type: none
        crossattn_module:
          target: ldm.modules.encoders.modules.FrozenBERTEmbedder
      
      # only mask cond
      # target: ldm.modules.diffusionmodules.model.Encoder
      # params:
      #   double_z: false
      #   z_channels: 4
      #   resolution: [128, 128, 128]
      #   in_channels: 2
      #   ch: 64
      #   out_ch: 1
      #   ch_mult: [1,1,1]  # num_down = len(ch_mult)-1
      #   num_res_blocks: 1
      #   dropout: 0.0
      #   attn_resolutions: []  # on z axis, starting with 12->24->48 for len(ch_mult)==4 and resolution==96
      #   attn_type: none

      # only text cond
      # target: torch.nn.Identity

data:
  target: test.DataModuleFromConfig
  params:
    batch_size: 1
    num_workers: 4
    wrap: False
    # test:
    #   target: ldm.data.ensemble.GatheredEnsembleDataset
    #   params:
    #     split: test
    #     resize_to: [128, 128, 128]
    #     disable_aug: true 
    #     include_ds: [liver]
    test:
      target: ldm.data.base.GenDataset
      params:
        include_case: [TCGA-LUAD_00004_0004.nii.gz, TCGA-LUAD_00004_0004.nii.gz]
        max_size: 50

lightning:
  callbacks:
    image_logger:
      target: test.ImageLogger
      params:
        test_batch_frequency: 1
        max_images: 10
        log_images_kwargs:
          quantize_denoised: false 
          plot_conditioned_samples: false
          # ddim_steps: null
        logger:
          inputs: 
            target: image_rescale
          reconstruction:
            target: image_rescale
          samples:
            target: image_rescale

  trainer:
    benchmark: True
    max_epochs: 1000
    limit_test_batches: 100