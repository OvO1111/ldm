model:
  base_learning_rate: 2.e-5
  target: ldm.models.diffusion.ddpm.ContrastiveDiffusion
  params:
    linear_start: 0.0015
    linear_end: 0.0195
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    loss_type: l1
    first_stage_key: image
    cond_stage_key: cat
    conditioning_key: concat
    image_size: [128, 128]  # after first-stage encoding
    channels: 4  # after first-stage encoding
    monitor: val/loss_simple_ema
    cond_stage_trainable: true

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 64  # not used
        in_channels: 8
        out_channels: 4
        model_channels: 128
        attention_resolutions: [4, 8]
        num_res_blocks: 2
        channel_mult: [1, 2, 4]
        num_head_channels: 32
        use_checkpoint: true  # always use ckpt
        dims: 2

    first_stage_config:
      target: ldm.models.autoencoder.VQModelInterface
      params:
        monitor: "val/rec_loss"
        image_key: image
        embed_dim: 4
        n_embed: 8192
        dims: 2
        is_conditional: false
        ckpt_path: /ailab/user/dailinrui/data/ldm/ruijin_2d_vq_(128)_512_512/checkpoints/last-v1.ckpt
        lossconfig:
          target: torch.nn.Identity

        ddconfig:
          double_z: false
          z_channels: 4
          resolution: [512, 512]
          in_channels: 1
          out_ch: 1
          ch: 128
          ch_mult: [ 1, 1, 1 ]  # num_down = len(ch_mult)-1
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
          dims: 2
          attn_type: none
          use_checkpoint: True  # always use ckpt

    cond_stage_config: 
      target: ldm.modules.diffusionmodules.model.Encoder
      params:
        double_z: false
        z_channels: 4
        resolution: [512, 512]
        in_channels: 2
        ch: 64
        out_ch: 1
        ch_mult: [1,1,1]  # num_down = len(ch_mult)-1
        num_res_blocks: 2
        dims: 2
        dropout: 0.0
        attn_resolutions: []  # on z axis, starting with 12->24->48 for len(ch_mult)==4 and resolution==96
        attn_type: none
        use_checkpoint: true  # always use ckpt

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 3
    num_workers: 3
    wrap: False
    train:
      target: ldm.data.ruijin.Ruijin_2D
      params:
        split: train
        resize_to: [128, 512, 512]
    validation:
      target: ldm.data.ruijin.Ruijin_2D
      params:
        split: val
        resize_to: [128, 512, 512]

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        train_batch_frequency: 200
        max_images: 10
        log_images_kwargs:
          quantize_denoised: false 
        logger:
          inputs: 
            target: image_rescale
          conditioning:
            target: mask_rescale
            params: 
              n_mask: 3
          reconstruction:
            target: image_rescale
          samples:
            target: image_rescale

  trainer:
    benchmark: True
    max_epochs: 1000