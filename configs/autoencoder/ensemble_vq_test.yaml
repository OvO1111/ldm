model:
  base_learning_rate: 1e-4
  target: inference.models.InferAutoencoderVQ
  params:
    monitor: "val/rec_loss"
    image_key: image
    embed_dim: 4
    n_embed: 8192
    dims: 3
    use_window_norm: false  
    lossconfig:
      target: torch.nn.Identity
      params:

    ddconfig:
      double_z: false
      z_channels: 4
      resolution: [128, 128, 128]
      in_channels: 1
      out_ch: 1
      ch: 128
      ch_mult: [ 1, 1, 1 ]  # num_down = len(ch_mult)-1
      num_res_blocks: 2
      attn_resolutions: []
      dropout: 0.0
      dims: 3
      attn_type: none
      use_checkpoint: True  # always use ckpt

    ckpt_path: /ailab/user/dailinrui/data/ldm/ensemble_multiwin_ldm_vq_128_128_128/checkpoints/last-v3.ckpt
    save_dataset: true 
    save_dataset_path: /ailab/user/dailinrui/data/ldm/ensemble_multiwin_ldm_vq_128_128_128

data:
  target: test.DataModuleFromConfig
  params:
    batch_size: 1
    num_workers: 2
    wrap: False
    test:
      target: ldm.data.ensemble.EnsembleDatasetV2
      params:
        split: test
        resize_to: [128, 128, 128]

lightning:
  callbacks:
    image_logger:
      target: test.ImageLogger
      max_images: 10
      log_separate: false
      params:
        train_batch_frequency: 400
        max_images: 8
        logger:
          inputs: 
            target: image_rescale
          reconstruction:
            target: image_rescale

  trainer:
    benchmark: True
    accumulate_grad_batches: 1

